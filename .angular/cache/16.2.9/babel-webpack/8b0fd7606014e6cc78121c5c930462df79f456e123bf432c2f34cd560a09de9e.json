{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let LoginComponent = class LoginComponent {\n  constructor(auth, route) {\n    this.auth = auth;\n    this.email = '';\n    this.password = '';\n  }\n  loginHandler() {\n    if (this.email && this.password) {\n      this.auth.login(this.email, this.password).subscribe({\n        next: data => {\n          console.log('data', data);\n          //  localStorage.setItem('token' ,data. )\n        },\n\n        error: err => {\n          console.log(err);\n        }\n      });\n      // Successful login, navigate to the dashboard or home page\n      // You can use Angular Router for navigation\n    } else {\n      // Handle login failure (e.g., show an error message)\n      alert('fail');\n    }\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})], LoginComponent);","map":{"version":3,"names":["Component","LoginComponent","constructor","auth","route","email","password","loginHandler","login","subscribe","next","data","console","log","error","err","alert","__decorate","selector","templateUrl","styleUrls"],"sources":["/Users/takiacademy/Desktop/e-commerce-front/src/app/components/auth/login/login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { AuthService } from 'src/app/services/auth/auth.service';\nimport {Router} from \"@angular/router\";\n\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent {\n  email: string = '';\n  password: string = '';\n\n  constructor(public auth: AuthService , route) {}\n\n  loginHandler() {\n    if (this.email && this.password) {\n      this.auth.login(this.email, this.password).subscribe({\n        next: (data) => {\n          console.log('data', data);\n          //  localStorage.setItem('token' ,data. )\n        },\n        error: (err) => {\n          console.log(err);\n        },\n      });\n\n      // Successful login, navigate to the dashboard or home page\n      // You can use Angular Router for navigation\n    } else {\n      // Handle login failure (e.g., show an error message)\n      alert('fail');\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAUlC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAIzBC,YAAmBC,IAAiB,EAAGC,KAAK;IAAzB,KAAAD,IAAI,GAAJA,IAAI;IAHvB,KAAAE,KAAK,GAAW,EAAE;IAClB,KAAAC,QAAQ,GAAW,EAAE;EAE0B;EAE/CC,YAAYA,CAAA;IACV,IAAI,IAAI,CAACF,KAAK,IAAI,IAAI,CAACC,QAAQ,EAAE;MAC/B,IAAI,CAACH,IAAI,CAACK,KAAK,CAAC,IAAI,CAACH,KAAK,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACG,SAAS,CAAC;QACnDC,IAAI,EAAGC,IAAI,IAAI;UACbC,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEF,IAAI,CAAC;UACzB;QACF,CAAC;;QACDG,KAAK,EAAGC,GAAG,IAAI;UACbH,OAAO,CAACC,GAAG,CAACE,GAAG,CAAC;QAClB;OACD,CAAC;MAEF;MACA;KACD,MAAM;MACL;MACAC,KAAK,CAAC,MAAM,CAAC;;EAEjB;CACD;AAzBYf,cAAc,GAAAgB,UAAA,EAL1BjB,SAAS,CAAC;EACTkB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE,wBAAwB;EACrCC,SAAS,EAAE,CAAC,wBAAwB;CACrC,CAAC,C,EACWnB,cAAc,CAyB1B"},"metadata":{},"sourceType":"module","externalDependencies":[]}